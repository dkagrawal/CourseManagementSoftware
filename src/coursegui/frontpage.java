/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package coursegui;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author alpha
 */
public class frontpage extends javax.swing.JFrame {
    DefaultListModel listmodel1,listmodel2,listmodel3,listmodel4,listmodel5;
    DefaultComboBoxModel combomodel;
    ArrayList<Course> course1,course2,course3,course4,course5;
    SimpleDateFormat sdf;
    int currentyr;
    public frontpage() {
        combomodel = new DefaultComboBoxModel();
        listmodel1 = new DefaultListModel();
        listmodel2 = new DefaultListModel();
        listmodel3 = new DefaultListModel();
        listmodel4 = new DefaultListModel();
        listmodel5 = new DefaultListModel();
        course1 = new ArrayList<>();
        course2 = new ArrayList<>();
        course3 = new ArrayList<>();
        course4 = new ArrayList<>();
        course5 = new ArrayList<>();
        sdf = new SimpleDateFormat("dd/MM/yyyy");
        Calendar cal = Calendar.getInstance();
        cal.setTime(new Date());
        currentyr = cal.get(Calendar.YEAR);
        initComponents();
        this.trydeserialize();
        combomodel.addElement(currentyr);
        combomodel.addElement(currentyr+1);
        combomodel.addElement(currentyr+2);
        combomodel.addElement(currentyr+3);
        combomodel.addElement(currentyr+4);
        jComboBox1.setModel(combomodel);
        this.setTitle("Welcome to Course Management Software");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jSeparator1 = new javax.swing.JSeparator();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Course Management Software", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Liberation Serif", 1, 24))); // NOI18N

        jButton1.setText("Create new Course");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(41, 159, 209));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("EXISTING COURSES");

        jList1.setModel(listmodel1);
        jScrollPane1.setViewportView(jList1);

        jButton4.setText("Exit the program");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "COURSE MENU", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("MathJax_Typewriter", 1, 18))); // NOI18N

        jButton3.setText("Display details");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("Modify details");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        jLabel2.setText("Course Options:");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        jLabel3.setText("Instructor Options:");

        jButton6.setText("Add");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Delete");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Ubuntu", 3, 15)); // NOI18N
        jLabel4.setText("Participant Options:");

        jButton8.setText("Add");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Delete");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Modify");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Modify");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Display");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Display");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("Delete course");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton14))
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton5)
                    .addComponent(jButton14))
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton12)
                    .addComponent(jButton10))
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jButton13)
                    .addComponent(jButton9)
                    .addComponent(jButton11))
                .addGap(46, 46, 46))
        );

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "currentyr", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 15)); // NOI18N
        jLabel5.setForeground(java.awt.Color.darkGray);
        jLabel5.setText("<html><b><i><u>SELECT YEAR:</u></i></b></html>");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(183, 183, 183))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(122, 122, 122)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(26, 26, 26)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
                int idx = jList1.getSelectedIndex();
       if(idx==-1){
            JOptionPane.showMessageDialog(null,"Please select a course first.","ERROR",
                    JOptionPane.ERROR_MESSAGE);
       }
       else{
           Course course = null;
           int yr = jComboBox1.getSelectedIndex();
            switch(yr){
                case 0:
                    course = course1.get(idx);
                    break;
                case 1:
                    course = course2.get(idx);
                    break;
                case 2:
                    course = course3.get(idx);
                    break;
                case 3:
                    course = course4.get(idx);
                    break;
                case 4:
                    course = course5.get(idx);
                    break;    
            }
           if(course.participants.size()==0){
               JOptionPane.showMessageDialog(null,"No participants added yet."
                       + "","ERROR",
                    JOptionPane.ERROR_MESSAGE);
           }
           else{
               ArrayList<String> facname = new ArrayList<>();
               int i=0;
               for(Participant f: course.participants){
                   i++;
                   facname.add(i+"."+f.getName());
               }
               String f = (String) JOptionPane.showInputDialog(this, 
                "Select the participant to display",
                "Participants List",
                JOptionPane.QUESTION_MESSAGE, 
                null, 
                facname.toArray(), 
                facname.get(0));
               if(f!=null){
                   int no = Integer.parseInt(f.split("\\.")[0]);
                   Adddetails facc = new Adddetails("Display a participant",4,
                           course.participants.get(no-1),this,course);
                   this.setVisible(false);
                   facc.setVisible(true);
               }
               
           }
       }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Course temp = new Course();
        Createform create = new Createform(this,"Creating a course","Create",1,temp);
        create.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int idx = jList1.getSelectedIndex();
        int yr = jComboBox1.getSelectedIndex();
        if(idx==-1){
            JOptionPane.showMessageDialog(null,"Please select a course first.","ERROR",
                    JOptionPane.ERROR_MESSAGE);
        }
        else{
            Course temp = null;
            switch(yr){
                case 0:
                    temp = course1.get(idx);
                    break;
                case 1:
                    temp = course2.get(idx);
                    break;
                case 2:
                    temp = course3.get(idx);
                    break;
                case 3:
                    temp = course4.get(idx);
                    break;
                case 4:
                    temp = course5.get(idx);
                    break;    
            }
            Createform create = new Createform(this,"Displaying a course","Display",2,temp);
            create.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int idx = jList1.getSelectedIndex();
        int yr = jComboBox1.getSelectedIndex();
        if(idx==-1){
            JOptionPane.showMessageDialog(null,"Please select a course first.","ERROR",
                    JOptionPane.ERROR_MESSAGE);
        }
        else{
            Course temp = null;
            switch(yr){
                case 0:
                    temp = course1.get(idx);
                    break;
                case 1:
                    temp = course2.get(idx);
                    break;
                case 2:
                    temp = course3.get(idx);
                    break;
                case 3:
                    temp = course4.get(idx);
                    break;
                case 4:
                    temp = course5.get(idx);
                    break;    
            }
            Createform create = new Createform(this,"Modify Course Details","Modify",3,temp);
            create.setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        int idx = jList1.getSelectedIndex();
        int yr = jComboBox1.getSelectedIndex();
        DefaultListModel listmodel = (DefaultListModel) jList1.getModel();
        if(idx==-1){
            JOptionPane.showMessageDialog(null,"Please select a course first.","ERROR",
                    JOptionPane.ERROR_MESSAGE);
        }
        else{
            int reply=JOptionPane.showConfirmDialog(this,"Are you sure to delete the course?"
                    ,"Delete Course", JOptionPane.YES_NO_OPTION);
            if(reply==0){
                switch(yr){
                case 0:
                    listmodel1.remove(idx);
                    course1.remove(idx);
                    break;
                case 1:
                    listmodel2.remove(idx);
                    course2.remove(idx);
                    break;
                case 2:
                    listmodel3.remove(idx);
                    course3.remove(idx);
                    break;
                case 3:
                    listmodel4.remove(idx);
                    course4.remove(idx);
                    break;
                case 4:
                    listmodel5.remove(idx);
                    course5.remove(idx);
                    break;    
                }
                try {
                    this.tryserialize();
                } catch (IOException ex) {
                    //do nothing
                }
                if (idx == listmodel.getSize()) {
                    idx--;
                }
                jList1.setSelectedIndex(idx);
            }
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       int idx = jList1.getSelectedIndex();
       int yr = jComboBox1.getSelectedIndex();
       if(idx==-1){
            JOptionPane.showMessageDialog(null,"Please select a course first.","ERROR",
                    JOptionPane.ERROR_MESSAGE);
       }
       else{
           Course temp = null;
            switch(yr){
                case 0:
                    temp = course1.get(idx);
                    break;
                case 1:
                    temp = course2.get(idx);
                    break;
                case 2:
                    temp = course3.get(idx);
                    break;
                case 3:
                    temp = course4.get(idx);
                    break;
                case 4:
                    temp = course5.get(idx);
                    break;    
            }
           if(temp.instructors.size()==5){
               JOptionPane.showMessageDialog(null,"No more instructors can be added"
                       + "","Instructors full",
                    JOptionPane.ERROR_MESSAGE);
           }
           else{
               Faculty f  = new Faculty();
               Adddetails facc = new Adddetails("Add A Faculty",1,f,this,temp);
               this.setVisible(false);
               facc.setVisible(true);
           }
       }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
       int idx = jList1.getSelectedIndex();
       if(idx==-1){
            JOptionPane.showMessageDialog(null,"Please select a course first.","ERROR",
                    JOptionPane.ERROR_MESSAGE);
       }
       else{
           Course course = null;
           int yr = jComboBox1.getSelectedIndex();
            switch(yr){
                case 0:
                    course = course1.get(idx);
                    break;
                case 1:
                    course = course2.get(idx);
                    break;
                case 2:
                    course = course3.get(idx);
                    break;
                case 3:
                    course = course4.get(idx);
                    break;
                case 4:
                    course = course5.get(idx);
                    break;    
            }
           if(course.instructors.isEmpty()){
               JOptionPane.showMessageDialog(null,"No instructors to display"
                       + "","ERROR",
                    JOptionPane.ERROR_MESSAGE);
           }
           else{
               ArrayList<String> facname = new ArrayList<>();
               int i=0;
               for(Faculty f: course.instructors){
                   i++;
                   facname.add(i+"."+f.getName());
               }
               String f = (String) JOptionPane.showInputDialog(this, 
                "Select the instructor",
                "Instructors List",
                JOptionPane.QUESTION_MESSAGE, 
                null, 
                facname.toArray(), 
                facname.get(0));
               if(f!=null){
                   int no = Integer.parseInt(f.split("\\.")[0]);
                   Adddetails facc = new Adddetails("Display faculty",2,
                           course.instructors.get(no-1),this,course);
                   this.setVisible(false);
                   facc.setVisible(true);
               }
               
           }
       }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
       int idx = jList1.getSelectedIndex();
       if(idx==-1){
            JOptionPane.showMessageDialog(null,"Please select a course first.","ERROR",
                    JOptionPane.ERROR_MESSAGE);
       }
       else{
           Course course = null;
           int yr = jComboBox1.getSelectedIndex();
            switch(yr){
                case 0:
                    course = course1.get(idx);
                    break;
                case 1:
                    course = course2.get(idx);
                    break;
                case 2:
                    course = course3.get(idx);
                    break;
                case 3:
                    course = course4.get(idx);
                    break;
                case 4:
                    course = course5.get(idx);
                    break;    
            }
           if(course.instructors.isEmpty()){
               JOptionPane.showMessageDialog(null,"No instructors to delete"
                       + "","ERROR",
                    JOptionPane.ERROR_MESSAGE);
           }
           else{
                ArrayList<String> facname = new ArrayList<>();
                int i=0;
                for(Faculty f: course.instructors){
                    i++;
                    facname.add(i+"."+f.getName());
                }
                String f = (String) JOptionPane.showInputDialog(this, 
                 "Select the instructor to delete",
                 "Instructors List",
                 JOptionPane.QUESTION_MESSAGE, 
                 null, 
                 facname.toArray(), 
                 facname.get(0));
                if(f!=null){
                   int no = Integer.parseInt(f.split("\\.")[0]);
                   course.instructors.remove(no-1);
                    try {
                        this.tryserialize();
                    } catch (IOException ex) {
                        //do nothing
                    }
                }
           }
       }
               
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        int idx = jList1.getSelectedIndex();
       if(idx==-1){
            JOptionPane.showMessageDialog(null,"Please select a course first.","ERROR",
                    JOptionPane.ERROR_MESSAGE);
       }
       else{
           Course course = null;
           int yr = jComboBox1.getSelectedIndex();
            switch(yr){
                case 0:
                    course = course1.get(idx);
                    break;
                case 1:
                    course = course2.get(idx);
                    break;
                case 2:
                    course = course3.get(idx);
                    break;
                case 3:
                    course = course4.get(idx);
                    break;
                case 4:
                    course = course5.get(idx);
                    break;    
            }
           if(course.instructors.isEmpty()){
               JOptionPane.showMessageDialog(null,"No instructors added yet."
                       + "","ERROR",
                    JOptionPane.ERROR_MESSAGE);
           }
           else{
               ArrayList<String> facname = new ArrayList<>();
               int i=0;
               for(Faculty f: course.instructors){
                   i++;
                   facname.add(i+"."+f.getName());
               }
               String f = (String) JOptionPane.showInputDialog(this, 
                "Select the instructor to modify",
                "Instructors List",
                JOptionPane.QUESTION_MESSAGE, 
                null, 
                facname.toArray(), 
                facname.get(0));
               if(f!=null){
                   int no = Integer.parseInt(f.split("\\.")[0]);
                   Adddetails facc = new Adddetails("Modify a faculty",5,
                           course.instructors.get(no-1),this,course);
                   this.setVisible(false);
                   facc.setVisible(true);
               }
               
           }
       }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        int idx = jList1.getSelectedIndex();
       if(idx==-1){
            JOptionPane.showMessageDialog(null,"Please select a course first.","ERROR",
                    JOptionPane.ERROR_MESSAGE);
       }
       else{
           Course course = null;
           int yr = jComboBox1.getSelectedIndex();
            switch(yr){
                case 0:
                    course = course1.get(idx);
                    break;
                case 1:
                    course = course2.get(idx);
                    break;
                case 2:
                    course = course3.get(idx);
                    break;
                case 3:
                    course = course4.get(idx);
                    break;
                case 4:
                    course = course5.get(idx);
                    break;    
            }
           if(course.participants.size()==5){
               JOptionPane.showMessageDialog(null,"No more participants can be added"
                       + "","Participants full",
                    JOptionPane.ERROR_MESSAGE);
           }
           else{
               Participant f  = new Participant();
               Adddetails facc = new Adddetails("Add A Participant",3,f,this,course);
               this.setVisible(false);
               facc.setVisible(true);
           }
       }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
                int idx = jList1.getSelectedIndex();
       if(idx==-1){
            JOptionPane.showMessageDialog(null,"Please select a course first.","ERROR",
                    JOptionPane.ERROR_MESSAGE);
       }
       else{
           Course course = null;
           int yr = jComboBox1.getSelectedIndex();
            switch(yr){
                case 0:
                    course = course1.get(idx);
                    break;
                case 1:
                    course = course2.get(idx);
                    break;
                case 2:
                    course = course3.get(idx);
                    break;
                case 3:
                    course = course4.get(idx);
                    break;
                case 4:
                    course = course5.get(idx);
                    break;    
            }
           if(course.participants.isEmpty()){
               JOptionPane.showMessageDialog(null,"No participants added yet."
                       + "","ERROR",
                    JOptionPane.ERROR_MESSAGE);
           }
           else{
               ArrayList<String> facname = new ArrayList<>();
               int i=0;
               for(Participant f: course.participants){
                   i++;
                   facname.add(i+"."+f.getName());
               }
               String f = (String) JOptionPane.showInputDialog(this, 
                "Select the participant to modify",
                "Participants List",
                JOptionPane.QUESTION_MESSAGE, 
                null, 
                facname.toArray(), 
                facname.get(0));
               if(f!=null){
                   int no = Integer.parseInt(f.split("\\.")[0]);
                   Adddetails facc = new Adddetails("Modify a participant",6,
                           course.participants.get(no-1),this,course);
                   this.setVisible(false);
                   facc.setVisible(true);
               }
               
           }
       }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
                int idx = jList1.getSelectedIndex();
       if(idx==-1){
            JOptionPane.showMessageDialog(null,"Please select a course first.","ERROR",
                    JOptionPane.ERROR_MESSAGE);
       }
       else{
           Course course = null;
           int yr = jComboBox1.getSelectedIndex();
            switch(yr){
                case 0:
                    course = course1.get(idx);
                    break;
                case 1:
                    course = course2.get(idx);
                    break;
                case 2:
                    course = course3.get(idx);
                    break;
                case 3:
                    course = course4.get(idx);
                    break;
                case 4:
                    course = course5.get(idx);
                    break;    
            }
           if(course.participants.size()==0){
               JOptionPane.showMessageDialog(null,"No participants added yet."
                       + "","ERROR",
                    JOptionPane.ERROR_MESSAGE);
           }
           else{
               ArrayList<String> facname = new ArrayList<>();
               int i=0;
               for(Participant f: course.participants){
                   i++;
                   facname.add(i+"."+f.getName());
               }
               String f = (String) JOptionPane.showInputDialog(this, 
                "Select the participant to delete",
                "Participants List",
                JOptionPane.QUESTION_MESSAGE, 
                null, 
                facname.toArray(), 
                facname.get(0));
               if(f!=null){
                   int no = Integer.parseInt(f.split("\\.")[0]);
                   course.participants.remove(no-1);
                   try {
                       this.tryserialize();
                   } catch (IOException ex) {
                       //do nothing
                   }
               }
               
           }
       }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        JComboBox combo = (JComboBox)evt.getSource();
        int current = (int)combo.getSelectedItem()-currentyr;
        switch(current){
            case 0:
                jList1.setModel(listmodel1);
                break;
            case 1:
                jList1.setModel(listmodel2);
                break;
            case 2:
                jList1.setModel(listmodel3);
                break;
            case 3:
                jList1.setModel(listmodel4);
                break;
            case 4:
                jList1.setModel(listmodel5);
                break;
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frontpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frontpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frontpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frontpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new frontpage().setVisible(true);
            }
        });
    }
    
    public void addlistelement(Course course,ArrayList<Course> c,DefaultListModel listmodel){
        
        int index=c.indexOf(course);
        listmodel.add(index,course.getCourseName());
        jList1.setSelectedIndex(c.indexOf(course));
        
    }
    public void modifylistelement(Course course,ArrayList<Course> c,DefaultListModel listmodel){
        int index=c.indexOf(course);
        listmodel.setElementAt(course.getCourseName(),index);
        jList1.setSelectedIndex(c.indexOf(course));
    }
    
    public void tryserialize() throws FileNotFoundException, IOException{
        try (FileOutputStream fos = new FileOutputStream("./src/coursegui/file.txt")) {
            ObjectOutputStream oos= new ObjectOutputStream(fos);
            ArrayList<Course> courses = new ArrayList<>();
            courses.addAll(course1);
            courses.addAll(course2);
            courses.addAll(course3);
            courses.addAll(course4);
            courses.addAll(course5);
            oos.writeObject(courses);
            oos.close();
        }
    }
    
    public void trydeserialize(){
        ArrayList<Course> arraylist = null;
        try{
            FileInputStream fis = new FileInputStream("./src/coursegui/file.txt");
            ObjectInputStream ois = new ObjectInputStream(fis);
            arraylist = (ArrayList)ois.readObject();
            for(Course c:arraylist){
                Calendar cal = Calendar.getInstance();
                try {
                    cal.setTime(sdf.parse(c.getSt_date()));
                } catch (ParseException ex) {
                   //do nothing
                }
                int yr = cal.get(Calendar.YEAR)-currentyr;
                switch(yr){
                        case 0:
                            course1.add(c);
                            listmodel1.add(course1.size()-1,c.getCourseName());
                            break;
                        case 1:
                            course2.add(c);
                            listmodel2.add(course2.size()-1,c.getCourseName());
                            break;
                        case 2:
                            course3.add(c);
                            listmodel3.add(course3.size()-1,c.getCourseName());
                            break;
                        case 3:
                            course4.add(c);
                            listmodel4.add(course4.size()-1,c.getCourseName());
                            break;
                        case 4:
                            course5.add(c);
                            listmodel5.add(course5.size()-1,c.getCourseName());
                            break;
                    }
                
            }
            jList1.setModel(listmodel1);
            ois.close();
            fis.close();
         }
         catch(IOException | ClassNotFoundException c){
          }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    public javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    public javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
